@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

&nbsp;
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Profil Düzenle</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item">WriterPanel</li>
                    <li class="breadcrumb-item active">EditWriter</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card card-solid">
        <div class="card-body ">
            @using (Html.BeginForm("EditProfile", "WriterPanel", FormMethod.Post))
            {
                <div class="form-group col-md-6" style="padding-left: 45px">
                    @Html.Label("Yazar ID:")
                    @Html.TextBoxFor(x => x.WriterID, new { @class = "form-control", ReadOnly = true })

                    @Html.Label("Yazar Adı:")
                    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
                    <p style="color:red">@Html.ValidationMessageFor(x => x.WriterName)</p>

                    @Html.Label("Yazar Soyadı:")
                    @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
                    <p style="color:red">@Html.ValidationMessageFor(x => x.WriterSurName)</p>

                    @Html.Label("Yazar Mail:")
                    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
                    <p style="color:red">@Html.ValidationMessageFor(x => x.WriterMail)</p>

                    @Html.Label("Yazar Parola:")
                    @*@Html.PasswordFor(x => x.WriterPassword, new { @class = "form-control" })*@
                    @Html.HiddenFor(x => x.WriterPassword, new { @class = "form-control" })

                    @Html.Label("Yazar Profil Resmi:http linki")
                    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
                    <font color="red">@Html.ValidationMessageFor(x => x.WriterImage)</font><br />

                    @Html.Label("Yazar Ünvanı")
                    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
                    <font color="red">@Html.ValidationMessageFor(x => x.WriterTitle)</font><br />

                    @Html.Label("Yazar Hakkında:")
                    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
                    <font color="red">@Html.ValidationMessageFor(x => x.WriterAbout)</font><br />

                    <div style="text-align: center">
                        <button class="btn btn-success">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Profili Düzenle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
                    </div>
                </div>}

            <hr />
            @using (Html.BeginForm("EditPassword", "WriterPanel", FormMethod.Post))
            {
                <div class="form-group col-md-6" style="padding-left: 45px">
                    @Html.Label("Yazar ID:")
                    @Html.TextBoxFor(x => x.WriterID, new { @class = "form-control", ReadOnly = true })

                    @Html.Label("Yazar Parola:")
                    @Html.PasswordFor(x => x.WriterPassword, new { @class = "form-control" })
                    <p style="color:red">@Html.ValidationMessageFor(x => x.WriterPassword)</p>

                    @Html.HiddenFor(x => x.WriterName, new { @class = "form-control" })

                    @Html.HiddenFor(x => x.WriterSurName, new { @class = "form-control" })

                    @Html.HiddenFor(x => x.WriterMail, new { @class = "form-control" })


                    @Html.HiddenFor(x => x.WriterImage, new { @class = "form-control" })

                    @Html.HiddenFor(x => x.WriterTitle, new { @class = "form-control" })

                    @Html.HiddenFor(x => x.WriterAbout, new { @class = "form-control" })
                    <div style="text-align: center">
                        <button class="btn btn-success">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Şifre Değiştir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
                    </div>
                </div>}
        </div>
    </div>
</section>